This document gathers information on how to set up a distributable application on the various operating systems
 - 1. Mac OS X
 - 2. Linux
 - 3. Windows
    a. Windows 8
    b. Windows 7

1. Mac OS X
============
1a. Interesting links
    http://stackoverflow.com/questions/1596945/building-osx-app-bundle
    - first answer gives good background
    - second answer has link to good (?) tool
      this fixes the dependency on libssh2 and the dependencies thereof.

    http://doc.qt.io/qt-5/osx-deployment.html
    - how to fix the dependencies on Qt libraries
    - mind the remark that QtGui depends itself on QtCore and needs fixing
    - it finally mentions the macdeployqt tool - it works nicely.
      <<<
        etijskens@etijskens [537] ~/qws/Launcher/Launcher$ ~/QtNew/5.5/clang_64/bin/macdeployqt
        Usage: macdeployqt app-bundle [options]

        Options:
           -verbose=<0-3>     : 0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug
           -no-plugins        : Skip plugin deployment
           -dmg               : Create a .dmg disk image
           -no-strip          : Don't run 'strip' on the binaries
           -use-debug-libs    : Deploy with debug versions of frameworks and plugins (implies -no-strip)
           -executable=<path> : Let the given executable use the deployed frameworks too
           -qmldir=<path>     : Deploy imports used by .qml files in the given path
           -always-overwrite  : Copy files even if the target file exists
           -codesign=<ident>  : Run codesign with the given identity on all executables

        macdeployqt takes an application bundle as input and makes it
        self-contained by copying in the Qt frameworks and plugins that
        the application uses.

        Plugins related to a framework are copied in with the
        framework. The accessibilty, image formats, and text codec
        plugins are always copied, unless "-no-plugins" is specified.

        See the "Deploying an Application on Qt/Mac" topic in the
        documentation for more information about deployment on Mac OS X.
      >>>

    https://developer.apple.com/library/mac/documentation/Porting/Conceptual/PortingUnix/distributing/distibuting.html
    - how to create a .dmg file

    https://forum.qt.io/topic/25915/qt-5-0-and-failed-to-load-platform-plugin-cocoa
    - solve this error 'This application failed to start because it could not find or load the Qt platform plugin "cocoa".'

2. Windows 7
============
    2.1 libssh2
    ============
    http://report5.blogspot.be/2012/09/how-to-compile-libssh2-for-windows-with.html

    a) zlib. 
       downloaded zlib source code from zlib.net, unpack the tarball,  cd into it and type the following commands:

        make -f win32/Makefile.gcc
        make install -f win32/Makefile.gcc BINARY_PATH=/mingw/bin INCLUDE_PATH=/mingw/include LIBRARY_PATH=/mingw/lib

       i replaced
         - make with ming32-make that comes with QT Creator
         - /mingw/bin with /Users/etijskens/qws/_bin etc..

    b) openssl. 
       the mentioned http://kemovitra.blogspot.be/2012/09/build-openssl-with-mingw.html no longer exists,
       neither does the redirection http://go.kblog.us/2012/09/build-openssl-with-mingw.html.
       Instead, we follow http://stackoverflow.com/questions/9379363/how-to-build-openssl-with-mingw-in-windows.
       
       used strawberry perlma
       to the make commands i added: CXX=/c/Qt/Tools/mingw492_32/g++.exe CC=/c/Qt/Tools/mingw492_32/gcc.exe
       
       
    
